<?xml version="1.0" encoding="UTF-8"?>
<web-app  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://java.sun.com/xml/ns/j2ee"

          xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="cmc-web" version="2.4">

    <!-- 覆盖default  servlet的/, springmvc servlet将处理原来处理静态资源的映射 -->
    <description>shop购物网站</description>
    <display-name>shop</display-name>

    <!--配置日志输出-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <!--配置DispatcherServlet-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:*.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!--<filter>-->
        <!--&lt;!&ndash;在web层打开Hibernate Session 以便在Web层访问到Hibernate延迟加载的数据&ndash;&gt;-->
        <!--<filter-name>hibernateFilter</filter-name>-->
        <!--<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
        <!--<filter-name>hibernateFilter</filter-name>-->
        <!--<url-pattern>*.html</url-pattern>-->
    <!--</filter-mapping>-->

    <!--字符编码-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>


    <!-- Spring MVC -->
    <servlet>
        <servlet-name>mvc-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:mvc-dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc-dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ImageValidate</servlet-name>
        <servlet-class>com.shop.captcha.ImageCaptchaServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ImageValidate</servlet-name>
        <url-pattern>/jcaptcha</url-pattern>
    </servlet-mapping>
    <!--定义dispatcher-->
    <!--
    <servlet>
        <servlet-name>Dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>25</session-timeout>
    </session-config>
    -->
    <!--验证码需要在安全之前-->
    <filter>
        <filter-name>validateCode</filter-name>
        <filter-class>com.shop.filter.ValidateCodeFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>validateCode</filter-name>
        <url-pattern>/login_check</url-pattern>
    </filter-mapping>

    <!--spring security安全框架需要在struct之前-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    

    <!-- struts filter -->
    <!--<filter>-->
        <!--<filter-name>struts2</filter-name>-->
        <!--<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>struts2</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--首页index.jsp-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <!--错误页面配置-->

</web-app>
